entrypoints XProgram;

Program.            XProgram ::= [XStatement];
separator nonempty XStatement ";";

Statement.          XStatement ::= "SELECT" [XSelectItem] XWhereClause XOrderClause;
separator nonempty XSelectItem ",";

WhereClause.        XWhereClause ::= "WHERE" XExpression;
WhereClauseEmpty.   XWhereClause ::= ;

OrderClause.        XOrderClause ::= "ORDER" "BY" [XOrderItem];
OrderClauseEmpty.   XOrderClause ::= ;

OrderItemCond.      XOrderItem ::= XExpression XOrderOption XNullsOption;
separator nonempty XOrderItem ",";

OrderOptionAsc.     XOrderOption ::= "ASC";
OrderOptionDesc.    XOrderOption ::= "DESC";
OrderOptionEmpty.   XOrderOption ::= ;

NullsOptionFirst.   XNullsOption ::= "NULLS" "FIRST";
NullsOptionLast.    XNullsOption ::= "NULLS" "LAST";
NullsOptionEmpty.   XNullsOption ::= ;

SelectItem.         XSelectItem ::= XExpression;
SelectItemAs.       XSelectItem ::= XExpression "AS" XIdent;

CondExprOr.         XExpression ::= XExpression "OR" XExpression1;
CondExprAnd.        XExpression1 ::= XExpression1 "AND" XExpression2;
CondExprNot.        XExpression2 ::= "NOT" XExpression3;
BoolExprRegex.      XExpression3 ::= XExpression4 "REGEXP" String;
BoolExprRel.        XExpression4 ::= XExpression4 XRelOp XExpression5;
ArithExprAdd.       XExpression5 ::= XExpression5 XArithOpAdd XExpression6;
ArithExprMultiply.  XExpression6 ::= XExpression6 XArithOpMultiply XExpression7;
ArithExprNeg.       XExpression7 ::= "-" XExpression8;
BasicExprVar.       XExpression8 ::= XIdent;
BasicExprCall.      XExpression8 ::= XIdent "(" [XExprListItem] ")";
BasicExprString.    XExpression8 ::= String;
BasicExprTrue.      XExpression8 ::= XBoolConst;
BasicExprInt.       XExpression8 ::= Integer;
BasicExprDouble.    XExpression8 ::= Double;
BasicExprBraces.    XExpression8 ::= "{" "}";
BasicExprBrackets.  XExpression8 ::= "[" "]";
BasicExprAngle.     XExpression8 ::= "<<" [XExprListItem] ">>";
BasicExprStmt.      XExpression8 ::= "(" XStatement ")";
coercions XExpression 8;

ArithOpAdd.         XArithOpAdd ::= "+";
ArithOpSubstract.   XArithOpAdd ::= "-";

ArithOpMultiply.    XArithOpMultiply ::= "*";
ArithOpDivide.      XArithOpMultiply ::= "/";
ArithOpModulo.      XArithOpMultiply ::= "%";

RelOpEqual.         XRelOp ::= "=";
RelOpNotEqual.      XRelOp ::= "<>";
RelOpGreater.       XRelOp ::= ">";
RelOpGreaterEqual.  XRelOp ::= ">=";
RelOpLesser.        XRelOp ::= "<";
RelOpLesserEqual.   XRelOp ::= "<=";

BoolConstTrue.      XBoolConst ::= "true";
BoolConstFalse.     XBoolConst ::= "false";

ExprListItem.       XExprListItem ::= XExpression;
separator XExprListItem ",";

token XIdent ((letter | '&') (letter | digit | '_')*);
