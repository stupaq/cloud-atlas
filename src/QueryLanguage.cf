entrypoints XProgram;

Program.            XProgram ::= [XStatement];
separator nonempty XStatement ";";

Statement.          XStatement ::= "SELECT" [XSelectItem] XWhereClause XOrderClause;
separator nonempty XSelectItem ",";

WhereClause.        XWhereClause ::= "WHERE" XCondExpr;
WhereClauseEmpty.   XWhereClause ::= ;

OrderClause.        XOrderClause ::= "ORDER" "BY" [XOrderItem];
OrderClauseEmpty.   XOrderClause ::= ;

OrderItemCond.      XOrderItem ::= XCondExpr XOrderOption XNullsOption;
separator nonempty XOrderItem ",";

OrderOptionAsc.     XOrderOption ::= "ASC";
OrderOptionDesc.    XOrderOption ::= "DESC";
OrderOptionEmpty.   XOrderOption ::= ;

NullsOptionFirst.   XNullsOption ::= "NULLS" "FIRST";
NullsOptionLast.    XNullsOption ::= "NULLS" "LAST";
NullsOptionEmpty.   XNullsOption ::= ;

SelectItem.         XSelectItem ::= XCondExpr;
SelectItemAs.       XSelectItem ::= XCondExpr "AS" XIdent;

CondExprOr.         XCondExpr ::= XCondExpr "OR" XCondExpr1;
CondExprAnd.        XCondExpr1 ::= XCondExpr1 "AND" XCondExpr2;
CondExprNot.        XCondExpr2 ::= "NOT" XCondExpr2;
CondExprBasic.      XCondExpr2 ::= XBoolExpr;
coercions XCondExpr 2;

BoolExprRel.        XBoolExpr ::= XBasicExpr XRelOp XBasicExpr;
BoolExprRegex.      XBoolExpr ::= XBasicExpr "REGEXP" String;
BoolExprBasic.      XBoolExpr ::= XBasicExpr;

RelOpEqual.         XRelOp ::= "=";
RelOpNotEqual.      XRelOp ::= "<>";
RelOpGreater.       XRelOp ::= ">";
RelOpGreaterEqual.  XRelOp ::= ">=";
RelOpLesser.        XRelOp ::= "<";
RelOpLesserEqual.   XRelOp ::= "<=";

BasicExprPlus.      XBasicExpr ::= XBasicExpr "+" XBasicExpr1;
BasicExprMinus.     XBasicExpr ::= XBasicExpr "-" XBasicExpr1;
BasicExprMultiply.  XBasicExpr1 ::= XBasicExpr1 "*" XBasicExpr2;
BasicExprDivide.    XBasicExpr1 ::= XBasicExpr1 "/" XBasicExpr2;
BasicExprModulo.    XBasicExpr1 ::= XBasicExpr1 "%" XBasicExpr2;
BasicExprNeg.       XBasicExpr2 ::= "-" XBasicExpr3;
BasicExprVar.       XBasicExpr3 ::= XIdent;
BasicExprCall.      XBasicExpr3 ::= XIdent "(" [XExprListItem] ")";
BasicExprString.    XBasicExpr3 ::= String;
BasicExprTrue.      XBasicExpr3 ::= XBoolConst;
BasicExprInt.       XBasicExpr3 ::= Integer;
BasicExprDouble.    XBasicExpr3 ::= Double;
BasicExprBraces.    XBasicExpr3 ::= "{" "}";
BasicExprBrackets.  XBasicExpr3 ::= "[" "]";
BasicExprAngle.     XBasicExpr3 ::= "<" [XExprListItem] ">";
BasicExprGroup.     XBasicExpr3 ::= "(" XCondExpr ")";
BasicExprStmt.      XBasicExpr3 ::= "(" XStatement ")";
coercions XBasicExpr 3;

BoolConstTrue.      XBoolConst ::= "true";
BoolConstFalse.     XBoolConst ::= "false";

ExprListItem.       XExprListItem ::= XCondExpr;
separator nonempty XExprListItem ",";

token XIdent ((letter | '&') (letter | digit | '_')*);
